<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Programming on Distributed Thinking </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://blog.droxer.me/tags/programming/</link>
    <language>en-us</language>
    
    
    <updated>Sat, 26 Dec 2015 21:18:04 CST</updated>
    
    <item>
      <title>理解Reactive Functional Programming</title>
      <link>http://blog.droxer.me/understanding_reactive_functional_programming/</link>
      <pubDate>Sat, 26 Dec 2015 21:18:04 CST</pubDate>
      
      <guid>http://blog.droxer.me/understanding_reactive_functional_programming/</guid>
      <description>自己在学习了解reactive functional programming的过程中，看了很多文章，视频，阅读了一些现有实现的源代码，甚至是自己去尝试实现一个简单的reactive框架。而在这些之后才对reactive funcational programming有一个一点点肤浅的理解。 学习过程中，按照自己以往的习惯，我先去wikipedia，想要对这个东西有一个初步的理解，明白它是什么东西，解决什么问题。而wikipedia上面的第一句话是 &amp;ldquo;Functional reactive programming (FRP) is a programming paradigm for reactive programming (asynchronous dataflow programming) using the building blocks of functional programming (e.g. map, reduce, filter).&amp;rdquo; 当时自己看到这个时，觉得这个描述过于抽象。自己一下子根本无法理解，但实际上当自己看完大量的文章视频之后，发现这个真的才是最准确的定义。 asynchronous dataflow programming dataflow可以是web应用中页面上用户的点击，系统中的一个个事件，包括用户的一个输入，对一个list的迭代等等。asynchronous dataflow programming是说，我们会异步的方式捕捉这些数据流，并在某些特定值或者满足某些特定条件的情况下执行相应的操作。这非常类似我们在设计模式中观察者模式。 c 代表鼠标的单击 --- 代表时间线 --c----c-c----c---c---- reactive functional programming 根据wiki的定义，是我们使用一些函数式编程中的方法对来操作这些asynchronous dataflow。： 鼠标的点击事件流: ---c----cc--c----ccc----c-- bufer(clickStream.throttle(250ms)) --1c----2c---1c---3c---1c--- map(e.length) ---1-----2----1----3----1--- filter(x = 2) ---------2---------2--------- 在上图，我们看到一个鼠标点击的asynchronous dataflow。首先，我们计算出每250ms的鼠标点击次数，然后使用map函数影射出每250ms内鼠标的点击次数，最后filter出两次以上的点击。最后我们可以根据我们最后的结果来执行相应的操作，比如说我们认为只有这样过滤出来的鼠标点击，我们认为是一次用户的双击操作。 上面是我对于Reactive Functional Programming一个非常粗浅的理解。如果大家想了解细节更多可以看看这个视频Functional Reactive Programming in the Netflix API，另外ReactiveX里有很多不同语言上对于Reactive Functional</description>
    </item>
    
    <item>
      <title>你的技术热情在哪里?</title>
      <link>http://blog.droxer.me/enthusiastic_on_programming/</link>
      <pubDate>Wed, 28 Oct 2015 23:34:00 CST</pubDate>
      
      <guid>http://blog.droxer.me/enthusiastic_on_programming/</guid>
      <description>最近一两年参加了很多的面试，技术热情作为 ThoughtWorks 技术文化最重要的组成部分，也成为了我们面试时候衡量一个人非常中重要的一个因素。 在我面试过所有人中不管是工作过一两年的程序员，还是有十几年工作经验的“架构师”，当我问到这个问题的时候，其中很大一部分的人都表示自己对技术充满的热情，非常喜欢写程序。一般情况，我会用下面的问题来做一个简单的验证： 你平时会读开源代码吗？ 你工作的8小时之外，会再花时间写代码吗？ 你们是关注新技术吗？ 给我介绍一个你自己非常精通的技术 &amp;hellip; 答案很多时候并不是能让人满意。而原因，一般都是下面几条： 现在的公司加班非常严重，我每天会回到家已经很晚了，没时间。 现在的公司技术气氛不好，我周围没有牛人 &amp;hellip; 而往往这种情况下，我看到结果也通常是候选人的技术基础比较浅，技术视野狭窄。 大学时候，我有一个同学非常喜欢魔兽世界，他可以在五一，十一这种假期完全泡在网吧里打魔兽。这在我这样一个对电子游戏不感冒的人来看是非常不能理解的，但是他却可以乐在其中，不能自拨，我觉得这就是热情。对一件事情的热情，来源于我们能真正享受其中难以外人描述的乐趣。当我的朋友向别人描述我是一个工作狂时，我一般都不会反对，也不会解释。因为我自己知道的自己狂热是因为我在我做自己感兴趣的事情，而且这些是我无法解释给他的。 让我再来看看这两个“原因”: 没有时间 我有一位我非常钦佩的比我年长一些同事，他是一个非常好的父亲，每天回家都要陪他儿子玩，一直玩到儿子睡了，差不多快12点了。但这个时候他还是会看看或谢谢代码差不多到1点多的时候。我还有一个非常年轻的同事，告诉他晚上经常写程序会写的非常兴奋，然后就是一个通宵。而在他们身上我看到是真正对编程的热爱，真正的技术热情。 周围没有牛人 首先，我必须承认有技术牛人在周围，确实会对你的技术提高会有帮助。但这并不是一个充分条件，在今天这样一个互联网的时代，你可以到处找到技术牛人。在github上看别人的代码，订阅Netfilix/google/twitter/facebook/linkin Engineer的文章，去slideshare/deck看别人的slide，这些都可以帮助到你。我身边也有这样的技术牛人，而对我自己来说，他们真正影响到我的是他们对技术的热情，精益求精的态度。</description>
    </item>
    
  </channel>
</rss>

